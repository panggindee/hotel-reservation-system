describe("LandingCtrl",function(){var a,b;beforeEach(module("app"));beforeEach(inject(function(d,c){b=d.$new();a=c("LandingCtrl",{"$scope":b})}));it("finding rm 101",function(){expect(b.rooms[0].rm).toEqual("101")});it("test filter rule, true when no pax is requested",function(){b.data.balancepax="";expect(b.filterRule(1)).toEqual(true);expect(b.filterRule(2)).toEqual(true);expect(b.filterRule(4)).toEqual(true)});it("test filter rule, true when room pax can fit the request pax",function(){b.data.balancepax="4";expect(b.filterRule(1)).toEqual(false);expect(b.filterRule(2)).toEqual(false);expect(b.filterRule(4)).toEqual(true)});it("test filter rule, true when no room pax can fit the request pax",function(){b.data.balancepax="5";expect(b.filterRule(1)).toEqual(true);expect(b.filterRule(2)).toEqual(true);expect(b.filterRule(4)).toEqual(true)});it("test filter floor rule, true when no floor is request",function(){b.filter.floor="";expect(b.filterFloor(1)).toEqual(true);expect(b.filterFloor(2)).toEqual(true);expect(b.filterFloor(4)).toEqual(true)});it("test filter floor rule, true when floor 1 is request",function(){b.filter.floor="1";expect(b.filterFloor(1)).toEqual(true);expect(b.filterFloor(2)).toEqual(false);expect(b.filterFloor(4)).toEqual(false)});it("test filter room rule, true when no room is request",function(){b.filter.room="";expect(b.filterRoom(1)).toEqual(true);expect(b.filterRoom(2)).toEqual(true);expect(b.filterRoom(4)).toEqual(true)});it("test filter room rule, true when room 101 is request",function(){b.filter.room=101;expect(b.filterRoom(101)).toEqual(true);expect(b.filterRoom(102)).toEqual(false);expect(b.filterRoom(103)).toEqual(false)});it("test updating balance pax, true when no request pax",function(){b.data.pax="";b.data.balancepax=10;b.updatePax();expect(b.data.balancepax).toEqual("")});it("test updating balance pax, true when request pax is 5",function(){b.data.pax="5";b.data.balancepax=10;b.updatePax();expect(b.data.balancepax).toEqual("5")});it("test updating floor filter, true when room is 101, floor is 1",function(){b.cart.push(0);b.updateFloor();expect(b.filter.floor).toEqual("1")});it("test uncheck same floor critera, true when floor selection is clear",function(){b.data.samefloor=0;b.updateFloor();expect(b.filter.floor).toEqual("")});it("test add item to cart, true when add room 510, pax4 to cart, balance pax is 0",function(){b.cart=[];b.data.balancepax=4;b.addToCart(49);expect(b.rooms[b.cart[0]].rm).toEqual("510");expect(b.data.balancepax).toEqual(0)});it("test remove item from cart, true when add room 510, pax4 to cart, balance pax is 0",function(){b.cart=[];b.data.balancepax=4;b.addToCart(49);b.removeFromCart(49);expect(b.cart.length).toEqual(0);expect(b.data.balancepax).toEqual(4)});it("test checkout cart, true when add room 510 to cart, checkout and room 510 avail is 0",function(){b.cart=[];b.data.balancepax=4;b.addToCart(49);b.checkOutCart();expect(b.cart.length).toEqual(0);expect(b.rooms[49].avail).toEqual(0)});it("test cancel a room reservation, true when add room 510 to cart, checkout, cancel and room 510 avail is 1",function(){b.cart=[];b.data.balancepax=4;b.addToCart(49);b.checkOutCart();b.cancelReservation(49);expect(b.rooms[49].avail).toEqual(1)})});